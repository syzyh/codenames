{"version":3,"sources":["App.js","index.js"],"names":["arrRandom","arr","sort","Math","random","color","Card","props","show","word","index","type","onFlip","flip","className","style","background","opacity","onClick","App","useState","setShow","Array","map","i","flips","setFlips","allTypes","setAllTypes","allCardsData","setAllCardsData","useEffect","split","slice","display","flexWrap","newFs","console","log","textAlign","marginTop","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGMA,EAAY,SAAAC,GAChB,OAAOA,EAAIC,MAAK,kBAAMC,KAAKC,SAAW,OAKlCC,EAAQ,CAAC,OAAQ,UAAW,UAAW,QAE7C,SAASC,EAAKC,GAAQ,IACZC,EAA0CD,EAA1CC,KAAMC,EAAoCF,EAApCE,KAAMC,EAA8BH,EAA9BG,MAAOC,EAAuBJ,EAAvBI,KAAMC,EAAiBL,EAAjBK,OACjC,OADkDL,EAATM,KACxB,qBAAKC,UAAU,OAAOC,MAAO,CAAEC,WAAYX,EAAMM,IAAjD,SAA0DF,IAEzE,qBACEK,UAAU,OACVC,MAAOP,EAAO,CAAEQ,WAAYX,EAAMM,GAAOM,QAAS,IAAO,GACzDC,QAAS,kBAAMN,EAAOF,IAHxB,SAKGD,IAmCQU,MA9Bf,WAAgB,IAAD,EACWC,oBAAS,GADpB,mBACNZ,EADM,KACAa,EADA,OAEaD,mBAAS,YAAKE,MAAM,KAAKC,KAAI,SAAAC,GAAC,OAAI,MAF/C,mBAENC,EAFM,KAECC,EAFD,OAGmBN,mBAAS,IAH5B,mBAGNO,EAHM,KAGIC,EAHJ,OAI2BR,mBAAS,IAJpC,mBAINS,EAJM,KAIQC,EAJR,KAUb,OALAC,qBAAU,WACRH,EAAY5B,EAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KACvE8B,EAAgB9B,EAzBJ,28DAyBsBgC,MAAM,WAAMC,MAAM,EAAG,OACtD,IAGD,sBAAKnB,UAAU,MAAf,UACE,qBAAKC,MAAO,CAAEmB,QAAS,OAAQC,SAAU,QAAzC,SAEEN,EAAaN,KAAI,SAACd,EAAMe,GAAP,OAAa,cAAClB,EAAD,CAAiBG,KAAMA,EAAMD,KAAMA,EAAMG,KAAMgB,EAASH,GAAG,EAAGX,KAAMY,EAAMD,GAAId,MAAOc,EAAGZ,OAAQ,SAAAY,GAC5H,IAAMY,EAAK,YAAQX,GACnBW,EAAMZ,IAAK,EACXa,QAAQC,IAAIF,GACZV,EAASU,KAJ8B3B,QAQ3C,qBAAKM,MAAO,CAAEwB,UAAW,SAAUC,UAAW,QAA9C,SACE,wBAAQzB,MAAO,CAAE0B,MAAO,QAASC,OAAQ,QAASxB,QAAS,kBAAIG,GAASb,IAAxE,SAAgFA,EAAO,SAAW,eC1C1GmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a746055f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\n\nconst arrRandom = arr => {\n  return arr.sort(() => Math.random() - 0.5);\n}\n\nconst rawData = '鼓，新娘，鼻子，秦始皇，锚，牛仔，肩膀，统治者，精神，电线，书，剃刀，踢，雾，老板，发热，绳，街道，雪崩，北京，床单，拿破仑，西装，地球，洗发水，奶酪，青蛙，牙医，牛奶，车轮，歹徒，蝴蝶，酸味，僵尸，脚步声，武则天，木乃伊，铁匠，功夫，闹钟，婚礼，哥仑布，牛头怪，大爆炸，睡觉，故宫，糖，经理，诡计，尼龙，玩偶，神经，电灯泡，长凳，裂口，饼干，雷，午餐，火山，锦衣卫，姐妹，羊，麻袋，骑兵，农场，法官，滑冰鞋，火枪手，浪花，端午节，路，胡椒粉，冰川，工艺，英里，蒙娜丽莎，口哨，杂志，铜，啤酒，帐篷，座位，粉，木偶，粉笔，体操运动员，磨坊，卷，钢笔，宝贝，夏威夷，沙拉，故事，猪，法老王，水母，听诊器，黄油，狼人，小提琴，米，比赛，泡沫，链子，枕头，梦，医生，洗澡';\n\nconst color = ['#f50', '#2db7f5', '#ffe58f', '#aaa'];\n\nfunction Card(props) {\n  const { show, word, index, type, onFlip, flip } = props;\n  if (flip) return <div className=\"card\" style={{ background: color[type]}}>{word}</div>\n  return (\n    <div\n      className=\"card\"\n      style={show ? { background: color[type], opacity: 0.5} : {}}\n      onClick={() => onFlip(index)}\n    >\n      {word}\n    </div>\n  )\n}\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [flips, setFlips] = useState([ ...Array(25)].map(i => false));\n  const [allTypes, setAllTypes] = useState([]);\n  const [allCardsData, setAllCardsData] = useState([]);\n  useEffect(() => {\n    setAllTypes(arrRandom([1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4]));\n    setAllCardsData(arrRandom(rawData.split('，')).slice(0, 25));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {\n        allCardsData.map((word, i) => <Card key={word} word={word} show={show} type={allTypes[i]-1} flip={flips[i]} index={i} onFlip={i => {\n          const newFs = [ ...flips ];\n          newFs[i] = true;\n          console.log(newFs);\n          setFlips(newFs);\n        }} />)\n      }\n      </div>\n      <div style={{ textAlign: 'center', marginTop: '16px'}}>\n        <button style={{ width: '160px', height: '42px'}} onClick={()=>setShow(!show)}>{show ? 'Hidden' : 'Show'}</button>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}